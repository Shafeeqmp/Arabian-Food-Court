<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Checkout Page</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="style.css" />
    <!-- bootstrap core css -->
    <link rel="stylesheet" type="text/css" href="/public/css/bootstrap.css" />

    <!--owl slider stylesheet -->
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css"
    />
    <!-- nice select  -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css"
      integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ=="
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <!-- font awesome style -->
    <link href="/public/css/font-awesome.min.css" rel="stylesheet" />

    <!-- Custom styles for this template -->
    <link href="/public/css/style.css" rel="stylesheet" />
    <!-- responsive style -->
    <link href="/public/css/responsive.css" rel="stylesheet" />
    <title>Cart</title>
    <style>
      .icon-hover-primary:hover {
        border-color: #3b71ca !important;
        background-color: white !important;
      }

      .icon-hover-primary:hover i {
        color: #3b71ca !important;
      }
      .icon-hover-danger:hover {
        border-color: #dc4c64 !important;
        background-color: white !important;
      }

      .icon-hover-danger:hover i {
        color: #dc4c64 !important;
      }
    </style>
  </head>
  <body>
    <header>
      <!-- Jumbotron -->
      <div class="p-3 text-center bg-white border-bottom">
        <div class="container">
          <div class="row gy-3">
            <!-- Left elements -->
            <div class="col-lg-2 col-sm-4 col-4">
              <a class="navbar-brand" href="#">
                <span style="color: black"> Arabian Food Court </span>
              </a>
            </div>
            <!-- Left elements -->

            <!-- Center elements -->
            <div class="order-lg-last col-lg-5 col-sm-8 col-8">
              <div class="d-flex float-end">
                <!-- <a href="" class="me-1 border rounded py-1 px-3 nav-link d-flex align-items-center" target="_blank">
                    <i class="fas fa-user-alt m-1 me-md-2"></i>
                    <p class="d-none d-md-block mb-0">Sign in</p>
                  </a> -->
                <a
                  href="#"
                  class="me-1 border rounded py-1 px-3 nav-link d-flex align-items-center"
                  target="_blank"
                >
                  <i class="fas fa-heart m-1 me-md-2"></i>
                  <p class="d-none d-md-block mb-0">Wishlist</p>
                </a>
                <a
                  href="/getCartPage"
                  class="border rounded py-1 px-3 nav-link d-flex align-items-center"
                  target="_blank"
                >
                  <i class="fas fa-shopping-cart m-1 me-md-2"></i>
                  <p class="d-none d-md-block mb-0">My cart</p>
                </a>
              </div>
            </div>
            <!-- Center elements -->

            <!-- Right elements -->
            <div class="col-lg-5 col-md-12 col-12">
              <div class="input-group float-center">
                <div class="form-outline">
                  <!-- <input type="search" id="form1" class="form-control" />
                    <label class="form-label" for="form1">Search</label> -->
                </div>
                <!-- <button type="button" class="btn btn-primary shadow-0">
                    <i class="fas fa-search"></i>
                  </button> -->
              </div>
            </div>
            <!-- Right elements -->
          </div>
        </div>
      </div>
      <!-- Jumbotron -->

      <!-- Heading -->
      <div class="bg-light">
        <div class="container py-4">
          <!-- Breadcrumb -->
          <nav class="d-flex">
            <h6 class="mb-0">
              <a href="/userHomePage" class="text-blue-50">Home</a>
              <span class="text-black-50 mx-2"> > </span>
              <a href="/getCartPage" class="text-black"><u>Shopping cart</u></a>
              <span class="text-black-50 mx-2"> > </span>
              <a class="text-black mx-2"><u>Checkout</u></a>
            </h6>
          </nav>
          <!-- Breadcrumb -->
        </div>
      </div>
      <!-- Heading -->
    </header>
    <div class="container mt-5">
      <div class="row">
        <!-- Cart Items Section -->
        <div class="col-md-6">
          <h3 class="mb-4">Checkout Page</h3>
          <% if (cart && cart.items.length > 0) { %> <% let total = 0; %> <%
          cart.items.forEach(item => { %>
          <div
            class="cart-item d-flex justify-content-between align-items-center border-bottom py-3"
          >
            <div class="item-info d-flex align-items-center">
              <img
                src="/public/<%= item.product.images[0] %>"
                class="border rounded me-3"
                style="width: 96px; height: 96px"
              />
              <div class="ms-3">
                <h5><%= item.productName %></h5>
                <p class="text-muted">Quantity: <%= item.quantity %></p>
              </div>
            </div>
            <span class="fw-bold">$<%= item.price %></span>
          </div>
          <% total += item.price; %> <% }) %>
          <!-- Total -->
          <div class="d-flex justify-content-between align-items-center mt-3">
            <h5>Total</h5>
            <span class="fw-bold">$<%= total %></span>
          </div>
          <% } else { %>
          <p>Your Checkout Page is empty.</p>
          <% } %>
        </div>
        <!-- Address and Payment Section -->
        <div class="col-md-6">
          <div>
              <div class="card mb-3 border shadow-0">
                <div class="card-body">
                  <form id="applyCouponForm">
                    <div class="form-group">
                      <label class="form-label">Have coupon?</label>
                      <div class="input-group">
                        <input type="text" id="couponCode" class="form-control border" name="couponCode" placeholder="Coupon code" />
                        <button class="btn btn-light border">Apply</button>
                      </div>
                    </div>
                  </form>
                  <div id="couponResult"></div>
                </div>
              </div>
              <div class="card shadow-0 border">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <p class="mb-2">Total:</p>
                    <p id="cart-total" class="mb-2">₹<%= cart ? cart.total_price.toFixed(2) : '0.00' %></p>
                  </div>
                  <div class="d-flex justify-content-between">
                    <p class="mb-2">Discount:</p>
                    <p class="mb-2 text-success" id="couponDiscount">00</p>
                  </div>
                  <hr />
                  <div class="d-flex justify-content-between">
                    <p class="mb-2">Net Amount:</p>
                    <p class="mb-2 fw-bold" id="couponTotal">₹<%= cart ? cart.total_price.toFixed(2) : '0.00' %></p>
                  </div>
              </div>
            </div>
          <h3 class="mb-4">Delivery Information</h3>
          <!-- Existing Addresses -->
          <div id="addressList">
            <label for="addressSelect" class="form-label">Select an Address</label>
            <div class="form-group">
              <select class="form-control" id="exampleFormControlSelect1">
                <option value="">Select address</option>
                <% address.forEach(function(Address) { %>
                <option value="<%= Address._id %>">
                  <%= Address.streetAddress %>, <%= Address.fullName %>
                </option>
                <% }); %>
              </select>
            </div>
          </div>
          <!-- Add New Address Button -->
           <div class="col-md-6">
             <button class="btn btn-outline-primary mt-5" id="addNewAddressBtn">
               + Add New Address
             </button>
           </div>
          <!-- New Address Form (Initially Hidden) -->
          <div id="newAddressForm" style="display: none">
            <form action="#" method="post" enctype="multipart/form-data">
              <div class="mb-3">
                <label for="name" class="form-label">Full Name</label>
                <input type="text"class="form-control"id="name"placeholder="Enter your full name"/>
              </div>
              <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <textarea  class="form-control" id="address" rows="3" placeholder="Enter your address"></textarea>
              </div>
              <div class="mb-3">
                <label for="phoneNumber" class="form-label">Phone</label>
                <input  class="form-control" id="phoneNumber"placeholder="Enter your Phone"></input>
              </div>
              <div class="mb-3">
                <label for="state" class="form-label">State</label>
                <input  class="form-control" id="state"placeholder="Enter your state"></input>
              </div>
              <div class="mb-3">
                <label for="country" class="form-label">Country</label>
                <input  class="form-control" id="country"placeholder="Enter your country"></input>
              </div>
              <div class="row">
                <div class="col-md-6">
                  <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input type="text"class="form-control"id="city"placeholder="Enter your city"/>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="mb-3">
                    <label for="zipcode" class="form-label">Zip Code</label>
                    <input type="text"class="form-control" id="zipcode" placeholder="Enter your zip code" />
                  </div>
                </div>
              </div>
              <button type="button" class="btn btn-success mt-3 w-100 mt-5" onclick="addAddress()"> Save Address</button>
            </form>
          </div>

          <!-- Payment Method Section -->
          <h3 class="mt-5 mb-3">Payment Method</h3>
          <div class="form-check">
          <input class="form-check-input" type="radio" name="paymentMethod" id="cod" checked />
          <label class="form-check-label" for="cod">Cash on Delivery</label>
          </div>
          <div class="form-check">
          <input class="form-check-input" type="radio" name="paymentMethod" id="card" />
          <label class="form-check-label" for="card">Credit/Debit Card</label>
          </div>
          <button type="button" onclick="placeOrder()" class="btn btn-primary mt-3 w-100">
            Place Order
          </button>
        </div>
      </div>
    </div>
    <!-- footer section -->
    <footer class="footer_section">
      <div class="container">
        <div class="row">
          <div class="col-md-4 footer-col">
            <div class="footer_contact">
              <h4>Contact Us</h4>
              <div class="contact_link_box">
                <a href="">
                  <i class="fa fa-map-marker" aria-hidden="true"></i>
                  <span> Location </span>
                </a>
                <a href="">
                  <i class="fa fa-phone" aria-hidden="true"></i>
                  <span> Call +91 9895089017 </span>
                </a>
                <a href="">
                  <i class="fa fa-envelope" aria-hidden="true"></i>
                  <span> 2009shafeeq@gmail.com </span>
                </a>
              </div>
            </div>
          </div>
          <div class="col-md-4 footer-col">
            <div class="footer_detail">
              <a href="" class="footer-logo"> Arabian Food Court </a>
              <p>
                Necessary, making this the first true generator on the Internet.
                It uses a dictionary of over 200 Latin words, combined with
              </p>
              <div class="footer_social">
                <a href="">
                  <i class="fa fa-facebook" aria-hidden="true"></i>
                </a>
                <a href="">
                  <i class="fa fa-twitter" aria-hidden="true"></i>
                </a>
                <a href="">
                  <i class="fa fa-linkedin" aria-hidden="true"></i>
                </a>
                <a href="">
                  <i class="fa fa-instagram" aria-hidden="true"></i>
                </a>
                <a href="">
                  <i class="fa fa-pinterest" aria-hidden="true"></i>
                </a>
              </div>
            </div>
          </div>
          <div class="col-md-4 footer-col">
            <h4>Opening Hours</h4>
            <p>Everyday</p>
            <p>10.00 Am -10.00 Pm</p>
          </div>
        </div>
        <div class="footer-info">
          <p>
            &copy; <span id="displayYear"></span> All Rights Reserved By
            <a href="">ShafeeqSoft Pvt.LTD</a><br /><br />
            &copy; <span id="displayYear"></span> Developed By
            <a href="" target="_blank">ShafeeqMtp</a>
          </p>
        </div>
      </div>
    </footer>
    <!-- footer section -->
    <script src="/public/js/jquery-3.4.1.min.js"></script>
    <!-- popper js -->
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
      integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
      crossorigin="anonymous"
    ></script>
    <!-- bootstrap js -->
    <script src="/public/js/bootstrap.js"></script>
    <!-- owl slider -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
    <!-- isotope js -->
    <script src="https://unpkg.com/isotope-layout@3.0.4/dist/isotope.pkgd.min.js"></script>
    <!-- nice select -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/js/jquery.nice-select.min.js"></script>
    <!-- custom js -->
    <script src="/public/js/custom.js"></script>
    <!-- Google Map -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCh39n5U-4IoWpsVGUHWdqB6puEkhRLdmI&callback=myMap"></script>
    <!-- End Google Map -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
      // Toggle new address form display
      document
        .getElementById("addNewAddressBtn")
        .addEventListener("click", function () {
          const form = document.getElementById("newAddressForm");
          form.style.display = form.style.display === "none" ? "block" : "none";
        });

      // Toggle card details display based on payment method selected
      document.getElementById("cod").addEventListener("click", function () {
        document.getElementById("card-details").style.display = "none";
      });

      document.getElementById("card").addEventListener("click", function () {
        document.getElementById("card-details").style.display = "block";
      });
    </script>
    <script>
      async function addAddress(){
        const fullName =document.getElementById('name').value.trim();
        const streetAddress =document.getElementById('address').value.trim();
        const phone =document.getElementById('phoneNumber').value.trim();
        const city =document.getElementById('city').value.trim();
        const zipCode =document.getElementById('zipcode').value.trim();
        const state =document.getElementById('state').value.trim();
        const country =document.getElementById('country').value.trim();

        const phonePattern = /^(\+?\d{1,3}[-.\s]?)?\(?\d{3}\)?[-.\s]?\d{3}[-.\s]?\d{4}$/;

        if(!fullName || !streetAddress || !phone || !city || !zipCode || !state || !country){
          Swal.fire({
              title: "Error",
              text: "All fields must be filled",
              icon: "error",
              confirmButtonText: "Okay"
          });
          return;
        }
        if(streetAddress.trim().split(/\s+/).length > 30) {
        Swal.fire({
        title: 'Error',
        text: "Only 30 words allowed",
        icon: "error",
        confirmButtonText: "Okay"
    });
    return;
       }
    if (!phonePattern.test(phone)) {
    Swal.fire({
        title: 'Error',
        text: "Invalid phone number format",
        icon: "error",
        confirmButtonText: "Okay"
    });
    return;
}
if (zipCode.length < 6 || /\s/.test(zipCode)) {
      Swal.fire({
        title:'Error',
        text:"Zipcode must be at least 6 characters and contain no spaces",
        icon:"error"
      });
      return;
    }
    try {
      const response=await fetch('/addAddress',{
      method:'POST',
      headers:{
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({fullName,streetAddress,phone,city,zipCode,state,country })
    });
    if (response.ok) {
            Swal.fire({
                title: 'Address Added!',
                text: 'The new address was added successfully.',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Failed!',
                text: 'Failed to add the address. Please try again.',
            });
        }
    } catch (error) {
        console.error('Error while adding address', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An unexpected error occurred while adding the address.',
        });
    }
  }
    </script>

    <script>
  async function placeOrder() {
    const couponCode = document.getElementById('couponCode').value.trim();
    const addressId = document.getElementById('exampleFormControlSelect1').value.trim();
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').id.trim();

    if (!addressId || !paymentMethod) {
        Swal.fire({
            title: 'Error',
            text: 'Please select an address and payment method.',
            icon: "error"
        });
        return;
    }

    if (paymentMethod === 'cod') { 
        // Handle Cash on Delivery order
        try {
            const response = await fetch('/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ addressId, paymentMethod, couponCode })
            });

            if (response.ok) {
                Swal.fire({
                    title: 'Order Placed!',
                    text: 'Your order was placed successfully.',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = '/orderHistory';
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed!',
                    text: 'Failed to place the order. Please try again.',
                });
            }
        } catch (error) {
            console.error('Error while placing order', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'An unexpected error occurred while placing the order.',
            });
        }
    } else if (paymentMethod === 'card') {
        // Handle Razorpay payment
        try {
            const response = await fetch('/razor-Pay-OrderCreate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ addressId, paymentMethod, couponCode })
            });

            if (response.ok) {
                const result = await response.json();
                console.log(result);
                
                if (result.success) {
                    const options = {
                        key: 'rzp_test_Lbm5uqOcFryrT5', // Replace with your Razorpay key
                        amount: result.payableAmount,
                        currency: 'INR',
                        name: 'Arabian food court',
                        description: "Payment for order",
                        order_id: result.razorpayOrder.id,
                        handler: async function (response) {
                            const response2 = await fetch('/razor-Pay-Payment', {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                
                                
                                body: JSON.stringify({
                                    addressId, paymentMethod, couponCode,
                                    payment_id: response.razorpay_payment_id,  // Check this property
                                    order_id: response.razorpay_order_id,      // Check this property
                                    signature: response.razorpay_signature
                                })
                            });
                            const verifyData = await response2.json();
                            if (response2.ok && verifyData.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Order Placed',
                                    text: 'Your order has been placed successfully.',
                                    confirmButtonText: 'OK',
                                    timer: 2000
                                }).then(() => {
                                    window.location.href = '/orderHistory';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: "Payment Failed",
                                    text: verifyData.error || 'Payment verification failed. Please try again.',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        prefill: {
                            name: 'User Name', // Replace with actual user data
                            email: 'useremail@email.com',
                            contact: '112233665544' // Replace with actual contact info
                        },
                        theme: {
                            color: "#000000"
                        }
                    };
                    console.log(options);
                    
                    const razorpay = new Razorpay(options);

                    razorpay.on('payment.failed', async function (response) {
                        console.log('Payment failed:', response.error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'The payment was not completed. Please try again.',
                            confirmButtonText: 'OK'
                        });
                    });

                    razorpay.open();

                } else {
                    Swal.fire({
                        icon: 'error',
                        title: "Payment Failed",
                        text: 'Payment verification failed. Please try again.',
                        confirmButtonText: 'OK'
                    });
                }

            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed to Order',
                    text: 'Unable to place order. Please try again later.',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error while processing payment', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred while processing the payment.',
                confirmButtonText: 'OK'
            });
        }
    }
  }
</script>
>

<script>
  //Apply Coupon --------Section
  document.getElementById('applyCouponForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const couponCode = document.getElementById('couponCode').value;
    let originalTotal = parseFloat(document.getElementById('couponTotal').getAttribute('data-original-total'));

    // If original total isn't stored, store it the first time the coupon is applied
    if (!originalTotal) {
        originalTotal = parseFloat(document.getElementById('couponTotal').textContent.replace('₹', ''));
        document.getElementById('couponTotal').setAttribute('data-original-total', originalTotal);
    }

    fetch('/apply-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ couponCode }),
    })
    .then(response => response.json())
    .then(data => {
        const resultDiv = document.getElementById('couponResult');
        const resultDiv2 = document.getElementById('couponDiscount');
        const resultDiv3 = document.getElementById('couponTotal');
        
        if (data.success) {
            resultDiv.innerHTML = `
                <p class="text-success">Coupon applied successfully!</p>
                <p id="RemoveCouponCode">Your Code: ${data.couponCode}</p>
                <p>Discount Amount: ₹${data.discountAmount}</p>
                <button onclick="removeCoupon()">Remove Coupon</button>
            `;
            resultDiv2.innerHTML = `<p>₹${data.discountAmount}.00</p>`;
            resultDiv3.innerHTML = `<p>₹${data.finalAmount}.00</p>`;
        } else {
            resultDiv.innerHTML = `<p class="text-danger">${data.message}</p>`;
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('couponResult').innerHTML = '<p>An error occurred while applying the coupon</p>';
    });
});

function removeCoupon() {
    const couponText = document.getElementById('RemoveCouponCode').textContent;
    const couponCode = couponText.replace('Your Code: ', '').trim();

    fetch('/remove-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ couponCode })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const resultDiv = document.getElementById('couponResult');
            const resultDiv2 = document.getElementById('couponDiscount');
            const resultDiv3 = document.getElementById('couponTotal');

            resultDiv.innerHTML = '<p class="text-success">Coupon removed successfully</p>';
            resultDiv2.innerHTML = '<p>₹0.00</p>';

            // Restore the original total amount
            const originalTotal = parseFloat(document.getElementById('couponTotal').getAttribute('data-original-total'));
            resultDiv3.innerHTML = `<p>₹${originalTotal}.00</p>`;

            // Clear the original total data attribute
            document.getElementById('couponTotal').removeAttribute('data-original-total');
        } else {
            document.getElementById('couponResult').innerHTML = `<p>${data.message}</p>`;
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('couponResult').innerHTML = '<p>An error occurred while removing the coupon</p>';
    });
}

  </script>

  </body>
</html>
