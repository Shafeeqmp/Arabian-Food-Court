<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- title %></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            background-color: #ffbe33;
            color: #fff;
            padding-top: 5rem;
            width: 16.666667%;
            overflow-y: auto;
            z-index: 100;
        }

        .sidebar a {
            color: #fff;
            text-decoration: none;
        }

        .sidebar a:hover {
            background-color: #071553;
        }

        .content {
            margin-left: 16.666667%;
            padding: 2rem;
            margin-top: 3.5rem;
            width: calc(100% - 16.666667%);
        }

        .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 200; 
      }

        #couponDetails {
            display: none;
        }

        .date-range {
            display: none;
        }

        .chart-container {
            width: 100%;
            height: 400px;
            margin-top: 20px;
        }

        .card {
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            border-top-left-radius: 15px !important;
            border-top-right-radius: 15px !important;
            background: linear-gradient(45deg, #3a7bd5, #00d2ff) !important;
            border: none;
        }

        #salesChart {
            min-height: 400px;
            padding: 20px;
        }

        .card-body {
            padding: 1.5rem;
        }

        #loadingIndicator {
            position: relative;
            padding: 20px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            margin-top: 15px;
        }

        .alert {
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .alert-dismissible .close {
            padding: 0.5rem 1rem;
        }

        @media (max-width: 768px) {
            .sidebar {
                position: static;
                height: auto;
                width: 100%;
                padding-top: 1rem;
            }
            
            .content {
                margin-left: 0;
                width: 100%;
            }
        }

        .sidebar .nav-link {
            padding: 0.8rem 1rem;
            transition: all 0.3s ease;
            border-radius: 5px;
            margin: 0.2rem 0.5rem;
        }

        .sidebar .nav-link:hover {
            background-color: #071553;
            transform: translateX(5px);
        }

        .sidebar .nav-link i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        .sidebar .nav-link.active {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <!-- Navbar for mobile -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light d-md-none">
        <a class="navbar-brand" href="#">Admin Dashboard</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mobileNavbar" aria-controls="mobileNavbar" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="mobileNavbar">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="admin/admin_Dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/loaduserMng"><i class="fas fa-users"></i> <span class="sr-only">(current)</span>Users</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-box"></i> Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-shopping-cart"></i> Orders</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/categoryPage"><i class="fas fa-sliders-h"></i> Category</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-tag"></i> Coupon</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-credit-card"></i> Payment</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </li>
            </ul>
        </div>
    </nav>

    <!-- Main Layout -->
    <div class="container-fluid">
        <!-- Navbar for larger screens -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Admin Dashboard</a>
            <div class="collapse navbar-collapse justify-content-end">
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="adminDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-user"></i> Admin
                        </a>
                        <div class="dropdown-menu" aria-labelledby="adminDropdown">
                            <a class="dropdown-item" href="/admin/logout" id="logoutBtn">Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="row">
            <!-- Sidebar for large screens -->
            <nav class="col-md-2 sidebar">
                <ul class="nav flex-column">
                    <li class="nav-item"><a class="nav-link active" href="/admin/loadAdminDash"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/loaduserMng"><i class="fas fa-users"></i> Users</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/loadProuctPage"><i class="fas fa-box"></i> Products</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/loardOrderMng"> <i class="fas fa-shopping-cart"></i> Orders</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/categoryPage"><i class="fas fa-sliders-h"></i> Category</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/loadCouponPage"><i class="fas fa-tag"></i> Coupon</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/offer"><i class="fas fa-tags"></i> Offer</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                </ul>
            </nav>

            <!-- Main Content -->
            <main role="main" class="col-md-10 content">
                <div class="container my-5">
                    <p class="text-danger"><%= locals.existCat ? existCat : null %></p>
                    <h2 class="text-center mb-4">Category Management</h2>

                    <!-- Search Bar -->
                    
                    <div class="d-flex justify-content-end mb-4 align-items-center">
                        <input type="text" class="form-control search-bar mr-2" placeholder="Add Category" id="addCategory">
                        <button class="btn btn-success" onclick="addCategory()">
                            <i class="fas fa-plus"></i> Add Category
                        </button>
                    </div>

                    <!-- Category Table -->
                    <div class="table-container">
                        <table class="table table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col">Category ID</th>
                                    <th scope="col">Category Name</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if(typeof catData != 'undefined' && catData.length >0) { %>
                                    <% catData.forEach((category, index) => { %>
                                        <tr>
                                            <td><%= index + 1000 %></td>
                                            <td><%= category.category_name %></td>
                                            <td>
                                                <% if (category.isDeleted) { %>
                                                    <button class="btn btn-primary btn-sm" onclick="restoreCategory('<%= category._id %>')">
                                                        <i class="fas fa-recycle"></i> Restore
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn btn-warning btn-sm" onclick="editCategory('<%= category._id %>', '<%= category.category_name %>')">
                                                        <i class="fas fa-edit"></i> Edit
                                                    </button>
                                                    <button class="btn btn-danger btn-sm" onclick="deleteCategory('<%= category._id %>')">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </button>                                                    
                                                <% } %>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="3" class="text-center">No categories available</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Edit Category Modal -->
                    <div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div class="form-group">
                                        <label for="editCategoryName">Category Name</label>
                                        <input type="text" class="form-control" id="editCategoryName">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary" onclick="saveCategoryChanges()">Save changes</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
    <div class="pagination-container">
        <div class="pagination-wrapper">
            <!-- Showing Entries -->
            <div class="showing-entries text-muted">
                Showing <%= (currentPage - 1) * limit + 1 %> to <%= Math.min(currentPage * limit, totalcategory) %> of <%= totalcategory %> entries
            </div>
        
            <!-- Pagination Navigation -->
            <nav aria-label="Order pagination">
                <ul class="pagination mb-0">
                    <!-- Previous button -->
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>" <%= currentPage === 1 ? 'tabindex="-1" aria-disabled="true"' : '' %>>Previous</a>
                    </li>
                    
                    <!-- First Page -->
                    <li class="page-item <%= currentPage === 1 ? 'active' : '' %>">
                        <a class="page-link" href="?page=1">1</a>
                    </li>
        
                    <!-- Left Ellipsis -->
                    <% if (currentPage > 3) { %>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    <% } %>
        
                    <!-- Pages around current page -->
                    <% for(let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) { %>
                        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
        
                    <!-- Right Ellipsis -->
                    <% if (currentPage < totalPages - 2) { %>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    <% } %>
        
                    <!-- Last Page -->
                    <% if (totalPages > 1) { %>
                        <li class="page-item <%= currentPage === totalPages ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                        </li>
                    <% } %>
        
                    <!-- Next button -->
                    <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=<%= currentPage + 1 %>" <%= currentPage === totalPages ? 'tabindex="-1" aria-disabled="true"' : '' %>>Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
    
        let currentCategoryId = null;

    // Add Category Section
    async function addCategory() {
    const categoryName = document.getElementById('addCategory').value.trim();
    if (categoryName === '') {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please enter a category name!',
        });
        return;
    }
    try {
        const response = await fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: categoryName })
        });

        if (response.ok) {
            Swal.fire({
                title: 'Category Added!',
                text: 'The new category was added successfully.',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Failed!',
                text: 'Failed to add the category. Please try again.',
            });
        }
    } catch (error) {
        console.error('Error while adding category', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An unexpected error occurred while adding the category.',
        });
    }
}


    //Edit Category Section
    function editCategory(categoryId, categoryName) {
    currentCategoryId = categoryId;
    document.getElementById('editCategoryName').value = categoryName;
    
    $('#editCategoryModal').modal('show');
}

async function saveCategoryChanges() {
    const updatedCategoryName = document.getElementById('editCategoryName').value.trim();

    if (updatedCategoryName === '') {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please enter a category name!',
        });
        return;
    }

    try {
        const response = await fetch(`/admin/editCategory/${currentCategoryId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: updatedCategoryName })
        });

        if (response.ok) {
            Swal.fire({
                title: 'Updated!',
                text: 'Category updated successfully!',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            }).then(() => {
                $('#editCategoryModal').modal('hide');
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Failed!',
                text: 'Failed to update category. Please try again.',
            });
        }
    } catch (error) {
        console.error('Error updating category:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An unexpected error occurred while updating the category.',
        });
    }
}
        //Delete Category Section
    function deleteCategory(categoryId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "This action cannot be undone!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/deleteCategory/${categoryId}`, {
                method: 'PUT'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'Category has been deleted successfully.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Failed!',
                        text: 'Failed to delete category.',
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error deleting category:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    icon: 'error'
                });
            });
        }
    });
}


        //Restore Category Setion
        function restoreCategory(categoryId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to restore this category?",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, restore it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/restoreCategory/${categoryId}`, {
                method: 'PUT'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Restored!',
                        text: 'Category has been restored successfully.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Failed!',
                        text: 'Failed to restore category.',
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error restoring category:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    icon: 'error'
                });
            });
        }
    });
}

        
    </script>
</body>
</html>
