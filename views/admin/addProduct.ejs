<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%- title %></title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css"
    />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
      /* Form container styling */
      .form-container {
        background: #f9f9f9;
        border-radius: 10px;
        padding: 2rem;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
      }

      .form-container h2 {
        margin-bottom: 1.5rem;
        font-weight: 700;
        color: #333;
      }

      .form-container label {
        font-weight: 500;
        color: #555;
      }

      .form-container .form-control {
        border-radius: 5px;
        border: 1px solid #ddd;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        padding: -0.25rem 1.25rem;
      }

      .form-container .btn-submit {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 0.75rem 1.25rem;
        width: 100%;
        font-size: 1rem;
        font-weight: 600;
      }

      .form-container .btn-submit:hover {
        background-color: #0056b3;
        color: #fff;
      }

      .form-group {
        margin-bottom: 1.5rem;
      }

      /* Responsive adjustments */
      @media (max-width: 767px) {
        .form-container {
          padding: 1rem;
        }
      }

      /* Add these new styles */
      .img-container {
        max-width: 100%;
        max-height: 400px;
      }
      #cropModal .modal-body {
        max-height: 500px;
        overflow-y: auto;
      }
    </style>
  </head>

  <body>
    <section>
      <div class="container mt-4">
        <div class="row justify-content-center">
          <div class="col-md-8 col-lg-6">
            <div class="form-container">
              <h2 class="text-center">Add Products</h2>
              <!-- <p class="text-danger"><%= locals.exist ? exist : null %></p> -->
              <form action="#"method="post"enctype="multipart/form-data">
                <div class="form-group">
                  <label for="name">Product_Name</label>
                  <input type="text"id="pname"name="productName"class="form-control"/>
                </div>
                <div class="form-group">
                  <label for="name">Description</label>
                  <input type="text"id="dname"name="description" class="form-control"/>
                </div>
                <div class="form-group">
                  <label for="category">Category</label>
                  <select id="category"name="Category_id"class="form-control"required>
                    <% Category.forEach(function(category) { %>
                    <option value="<%=category._id%>">
                      <%= category.category_name %>
                    </option>
                    <% }); %>
                  </select>
                </div>
                <div class="form-group">
                  <label for="price">Price</label>
                  <input type="Number"id="price"name="price"class="form-control"required/>
                </div>
                <div class="form-group">
                  <label for="price">Stock</label>
                  <input type="Number"id="stock"name="stock"class="form-control"required/>
                </div>

                <div class="form-group" id="imgView1">
                  <label for="image">Image1</label>
                  <input type="file" id="input1" name="productImage1" class="form-control-file"
                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)" required />
                  <!-- Add a preview image element -->
                  <img id="preview1" src="" alt="" style="max-width: 25%; height: auto; display:none;" />
                </div>
                
                <div class="form-group" id="imgView2">
                  <label for="image">Image2</label>
                  <input type="file" id="input2" name="productImage2" class="form-control-file"
                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)" required />
                  <!-- Add a preview image element -->
                  <img id="preview2" src="" alt="" style="max-width: 25%; height: auto; display:none;" />
                </div>
                
                <div class="form-group" id="imgView3">
                  <label for="image">Image3</label>
                  <input type="file" id="input3" name="productImage3" class="form-control-file"
                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)" required />
                  <!-- Add a preview image element -->
                  <img id="preview3" src="" alt="" style="max-width: 25%; height: auto; display:none;" />
                </div>
                
                <div class="form-group" id="imgView4">
                  <label for="image">Image4</label>
                  <input type="file" id="input4" name="productImage4" class="form-control-file"
                    accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)" required />
                  <!-- Add a preview image element -->
                  <img id="preview4" src="" alt="" style="max-width: 25%; height: auto; display:none;" />
                </div>
                <button onclick="addProduct(event)" type="submit" class="btn btn-submit mt-4">Submit</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Add this new modal for image cropping -->
    <div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="img-container">
              <img id="cropImage" src="" alt="Image to crop">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    
    <script>
      let cropper;
      let currentImageInput;

      function viewImage(event, previewId) {
        const input = event.target;
        const preview = document.getElementById(`preview${previewId}`);
        currentImageInput = input;
        
        if (input.files && input.files[0]) {
          const reader = new FileReader();
          
          reader.onload = function(e) {
            $('#cropImage').attr('src', e.target.result);
            $('#cropModal').modal('show');
            
            $('#cropModal').on('shown.bs.modal', function() {
              if (cropper) {
                cropper.destroy();
              }
              cropper = new Cropper(document.getElementById('cropImage'), {
                aspectRatio: 1,
                viewMode: 1,
              });
            });
          }
          
          reader.readAsDataURL(input.files[0]);
        }
      }

      $('#cropButton').on('click', function() {
        const croppedCanvas = cropper.getCroppedCanvas();
        
        // Create a new canvas with white background
        const whiteCanvas = document.createElement('canvas');
        whiteCanvas.width = croppedCanvas.width;
        whiteCanvas.height = croppedCanvas.height;
        const ctx = whiteCanvas.getContext('2d');
        
        // Fill the canvas with white
        ctx.fillStyle = 'white';
        ctx.fillRect(0, 0, whiteCanvas.width, whiteCanvas.height);
        
        // Draw the cropped image onto the white canvas
        ctx.drawImage(croppedCanvas, 0, 0);
        
        whiteCanvas.toBlob((blob) => {
          const croppedImage = new File([blob], currentImageInput.files[0].name, {
            type: 'image/jpeg',
            lastModified: new Date().getTime()
          });
          
          const dataTransfer = new DataTransfer();
          dataTransfer.items.add(croppedImage);
          currentImageInput.files = dataTransfer.files;
          
          const preview = document.getElementById(`preview${currentImageInput.id.slice(-1)}`);
          preview.src = URL.createObjectURL(croppedImage);
          preview.style.display = 'block';
          
          $('#cropModal').modal('hide');
        }, 'image/jpeg', 0.95); // You can adjust the quality (0.95) as needed
      });

      async function addProduct(event) {
          event.preventDefault();

          const productName = document.getElementById('pname').value.trim();
          const description = document.getElementById('dname').value.trim();
          const Category_id = document.getElementById('category').value.trim();
          const price = document.getElementById('price').value.trim();
          const stock = document.getElementById('stock').value.trim();
          
          const productImage1 = document.getElementById('input1').files[0];
          const productImage2 = document.getElementById('input2').files[0];
          const productImage3 = document.getElementById('input3').files[0];
          const productImage4 = document.getElementById('input4').files[0];

          // Check if the form is being submitted (all required fields are filled)
          if (productName && description && price && stock && productImage1 && productImage2 && productImage3 && productImage4) {
              // Perform validation checks
              if (description.trim().split(/\s+/).length > 30) {
                  Swal.fire({
                      title: 'Error',
                      text: "Only 30 words allowed in description",
                      icon: "error",
                      confirmButtonText: "Okay"
                  });
                  return;
              }

              if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
                  Swal.fire({
                      title: 'Error',
                      text: "Please enter a valid price (positive number with up to two decimal places)",
                      icon: "error",
                      confirmButtonText: "Okay"
                  });
                  return;
              }
          
              if (!/^\d+$/.test(stock) || parseInt(stock) < 0) {
                  Swal.fire({
                      title: 'Error',
                      text: "Please enter a valid stock amount (non-negative integer)",
                      icon: "error",
                      confirmButtonText: "Okay"
                  });
                  return;
              }

              // Construct FormData object
              const formData = new FormData();
              formData.append('productName', productName);
              formData.append('Category_id', Category_id);
              formData.append('description', description);
              formData.append('price', price);
              formData.append('stock', stock);
              formData.append('productImage1', productImage1);
              formData.append('productImage2', productImage2);
              formData.append('productImage3', productImage3);
              formData.append('productImage4', productImage4);

              try {
                  const response = await fetch("/admin/addProduct", {
                      method: 'POST',
                      body: formData
                  });
                  const data = await response.json();
                  
                  if (response.ok) { 
                      if (data.success) {
                          Swal.fire({
                              title: 'Success',
                              text: "Product added successfully",
                              icon: "success",
                              timer: 1000
                          }).then(() => {
                              window.location.href = '/admin/loadProuctPage';
                          });
                      } else if (data.error) {
                          Swal.fire({
                              title: "Error",
                              text: data.error,
                              icon: "error"
                          });
                      }
                  } else {
                      Swal.fire({
                          title: "Oops!",
                          text: "Server error: " + data.error,
                          icon: "error"
                      });
                  }
              } catch (error) {
                  Swal.fire({
                      title: "Oops!",
                      text: "Something went wrong! Please try again",
                      icon: "error"
                  });
              }
          } else {
              // If the form is not completely filled, show a general error message
              Swal.fire({
                  title: "Error",
                  text: "Please fill all required fields",
                  icon: "error",
                  confirmButtonText: "Okay"
              });
          }
      }

    </script>




  </body>
</html>